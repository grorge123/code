//https://docs.google.com/viewerng/viewer?url=https://neoj.sprout.tw/api/problem/143/static/cont.pdf
#include<bits/stdc++.h>
using namespace std;
int dfs(int s[],int l,int r,int *cost){
    if(l==r)return s[l];
    if(l+1==r){
        *cost+=s[l]+s[r];
        return s[l]+s[r];
    }
    int Min=1e9;
    for(int i=l+1;i<=r;i++){
        int oldcost=*cost;
        int a=dfs(s,l,i-1,cost)+dfs(s,i,r,cost);
//        Min=min(Min,a);
        *cost+=a;
        if(Min>a){
            Min=a;
        }else{
            *cost=oldcost;
        }
    }
    return Min;
}
int main(){
    int t;
    cin >> t;
    while(t--){
        int n,s[105]={};
        cin >> n;
        for(int i=0;i<n;i++){
            cin >> s[i];
        }
        int ans=1e9,cost=0;
        for(int i=1;i<n;i++){
           cost=0;
           cost+=dfs(s,0,i-1,&cost)+dfs(s,i,n-1,&cost);
           cout << cost<<endl;
           ans=min(cost,ans);
        }
        cout << ans<<endl;

    }
}
