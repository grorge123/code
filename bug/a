#include<bits/stdc++.h>
using namespace std;
#define F first
#define S second
#define pii pair<int,int>
#define LL long long int
const int INF=INT_MAX;
int main(){
    char cst;
    while(cin >> cst){
        int n,st=cst-'A';
        int s[205]={};
        bool visit[205]={};
//        for(int i=0;i<205;i++){
//            s[i]=INF;
//        }
        cin >> n;
        vector<pair<int,int> > ve[205]={};
        for(int i=0;i<n;i++){
            char a,b;
            int c;
            cin >> a>>b>> c;
            ve[a-'A'].push_back(pair<int,int>(b-'A',c));
        }
        priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > pq;
//        queue<pair<int,int> >pq;
        s[st]=0;
        pq.push(pii(s[st],st));
        while(!pq.empty()){
            while(!pq.empty()&&pq.top().F<s[pq.top().S])pq.pop();
            int now=pq.top().S;pq.pop();
            //visit[now]=0;
//            cout << now<<" "<<s[now]<<endl;
            for(int i=0;i<ve[now].size();i++){
                if(s[ve[now][i].F]<s[now]+ve[now][i].S){
                    s[ve[now][i].F]=s[now]+ve[now][i].S;
                    //if(visit[ve[now][i].F]==0)
                    pq.push(pii(s[ve[now][i].F],ve[now][i].F));
                    //visit[ve[now][i].F]=1;
                }
            }
        }
        int Max=0;
        for(int i=0;i<8;i++){
//            cout << s[i]<<endl;
            if(s[i]!=INF)
                Max=max(Max,s[i]);
        }
        cout << Max<<endl;
    }
    return 0;
}
