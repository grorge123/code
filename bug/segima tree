#include<string.h>
#include<cstdio>
#include<iostream>
#include<algorithm>
using namespace std;
const int Max=1000005;
long long int m[Max*4]={},lazy[Max*4]={},lazy2[Max*4]={};
int build(int id,int l,int r){
    if(l==r){
        scanf("%d",&m[id]);
        return m[id];
    }
    build(id*2,l,(l+r)/2);
    build(id*2+1,(l+r)/2+1,r);
    m[id]=max(m[id*2],m[id*2+1]);
//    cout << l<<" "<<r<<" "<<id<<" "<<m[id]<<endl;
    return m[id];
}
void pushup(int id){
    m[id]=max(m[id*2],m[id*2+1]);
}
void pushdown(int id,int x){
	if(lazy[id]){
//        cout <<"id:"<< id<<endl;
        lazy[id*2]=lazy[id*2+1]=lazy[id];
        m[id*2]=lazy[id*2];
        m[id*2+1]=lazy[id*2+1];
        lazy[id]=0;
    }
	if(lazy2[id]){
        lazy2[id*2]+=lazy2[id];
        lazy2[id*2+1]+=lazy2[id];
        m[id*2]=m[id*2]+lazy2[id];
        m[id*2+1]=m[id*2+1]+lazy2[id];
        lazy2[id]=0;
    }
}
int query_line(int L,int R,int id,int l,int r){
//    cout << l<<" "<<r<<" "<<m[id]<<endl;
    if(L<=l&&R>=r){
//        cout << l<<" "<<r<<endl;
        return m[id];
    }
    pushdown(id,r-l+1);
    int m2=(l+r)/2;
    long long int Ma=0;
    if(m2>=L) Ma=max(Ma,(long long int)query_line(L,R,id*2,l,m2));
    if(m2<R) Ma=max((long long int)query_line(L,R,id*2+1,m2+1,r),Ma);
    return Ma;

}
void update_line(int L,int R,int c,int l,int r,int id){
    if(L<=l&&r<=R){
        lazy[id]=c;
        lazy2[id]=0;
        m[id]=c;
//        cout << l<<" "<<r<<" "<<c<<endl;
        return;
    }
    pushdown(id,c);
    int m=(l+r)/2;
    if(L<=m)update_line(L,R,c,l,m,id*2);
    if(R>m)update_line(L,R,c,m+1,r,id*2+1);
    pushup(id);
}
void update_line2(int L,int R,int c,int l,int r,int id){
    if(L<=l&&r<=R){
        lazy2[id]+=c;
        if(lazy[id])m[id]=lazy[id];
        m[id]=m[id]+lazy2[id];
        return;
    }
    pushdown(id,r-l+1);
    int m=(l+r)/2;
//    cout <<L<<" "<<R<<" "<<m<<" "<<l<<" "<<r<<endl;
    if(L<=m) update_line2(L,R,c,l,m,id*2);
    if(R>m) update_line2(L,R,c,m+1,r,id*2+1);
    pushup(id);
}
int main(){
    int n,q;
    scanf("%d %d",&n,&q);
    build(1,1,n);
    for(int i=0;i<q;i++){
        long long int a,b,c;
        cin >> a>>b>>c;
        if(a==1){
            long long int x;
            cin >> x;
            update_line2(b,c,x,1,n,1);
        }else if(a==2){
            printf("%d\n",query_line(b,c,1,1,n));
        }else if(a==3){
            long long int y;
            cin >> y;
            update_line(b,c,y,1,n,1);
        }else if(a==4){
            for(int i=1;i<15;i++){
                cout << m[i]<<" ";
            }
            cout << endl;
        }
    }

}
