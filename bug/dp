#include<cstdio>
#include<bits/stdc++.h>
#include "omp.h"
using namespace std;
long long dp[2005][2005]={},old[2005][2005]={};
int main(){
    #pragma omp parallel for
    int n,a,b,k,st,ed,ty;
//    cin >> n>>a>>b>>k;
    scanf("%d %d %d %d",&n,&a,&b,&k);
    if(b>a){
        st=1;
        ed=b-1;
        ty=1;
    }else{
        st=b+1;
        ed=n;
        ty=2;
    }
    for(int q=st;q<=ed;q++){
        if(abs(q-a)<abs(b-a)&&q!=a){
            dp[1][q]+=1;
        }
    }
    for(int i=2;i<=k;i++){
        for(int q=st;q<=ed;q++){
            old[i][q]=old[i][q-1]+dp[i-1][q];
        }
        for(int d=st;d<=ed;d++){
            if(ty==1){
                cout <<int(b-(abs(b-d)/2))<<endl;
                dp[i][d]+=old[i][int(b-(abs(b-d)/2))]-old[i][st-1];
                dp[i][d]%=1000000007;
            }else{
                dp[i][d]+=old[i][ed]-old[i][int(b+floor(abs(d-b)/2.0))];
                dp[i][d]%=1000000007;
            }
        }
    }
    int ans=0;
    for(int q=1;q<=k;q++){
        for(int i=st;i<=ed;i++){
            cout << dp[q][i]<<" ";
        }
        cout <<endl;
    }
    for(int i=st;i<=ed;i++){
        ans+=dp[k][i];
        ans%=1000000007;
    }
//    cout << ans<<endl;
    printf("%d\n",ans);
}
